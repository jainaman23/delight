/// Grid system
///   Generate semantic grid columns with these mixins

@import '../variables';

// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

/// Centered container element
@mixin make-cover($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor(($gutter / 2));
  padding-right: ceil(($gutter / 2));
  @include clearfix();
}

/// Creates a wrapper for a series of columns
@mixin make-row($gutter: $grid-gutter-width) {
  margin-left:  ceil(($gutter / -2));
  margin-right: floor(($gutter / -2));
  @include clearfix;
}

@mixin make-xs-column-offset($columns) {
  @media (min-width: $screen-xs-min) {
    margin-left: percentage(($columns / $grid-columns));
  }
}

/// Packets Generator
///
/// @param $i;
///   Counter
@mixin make-packs ($i: 1, $columns: $grid-columns) {
  $case: "lg";
  $list-all: ".pack-#{$case}-#{$i}";
  @each $case in lg, md, sm, xs, xxs {
    @media all and (min-width: $case) {
      @for $i from (1) through $columns {
        $list: ".pack-#{$case}-#{$i}";
        $list-all: "#{$list-all}, #{$list}";

        #{$list} {
          width: percentage((1/$columns)*$i);
        }
      }
    }
  }

  #{$list-all} {
    float: left;
    min-height: 1px;
  }
}

/// Case Generator for large screen.
@mixin make-boxes($i: 1, $columns: $grid-columns) {
  $case-all: ".box-lg-#{$i}";
  @each $case in lg, md, sm, xs, xxs {
    @media all and (min-width: $case) {
      @for $i from (1) through $columns {
        $case-all: "#{$case-all}, .box-#{$case}-#{$i}";

        .box-#{$case}-#{$i} {
          & > .box {
            width: percentage(1/$i);
          }
        }
      }
    }
  }

  #{$case-all} {
    & > .box {
      @include isolate-case;
    }
  }
}

/// Case
@mixin isolate-case() {
  float: left;
  min-height: 1px;
  padding-left:  ceil(($grid-gutter-width / 2));
  padding-right: floor(($grid-gutter-width / 2));
}
